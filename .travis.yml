language: node_js
sudo: required
cache: false
dist: trusty
os:
  - linux
node_js:
  - "13.8.0"

services:
  - xvfb
  - docker

addons:
  chrome: stable
  firefox: latest

before_install:
  - export CHROME_BIN=chromium-browser
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - docker run -d -p 5984:5984 --rm --name rxdb-couchdb couchdb:2.1.1

stages:
  - install
  - build
  - code format
  - unit tests
  - other
  - examples

jobs:
  include:
    - stage: install
      script: travis_retry npm install --depth 0 --silent

    - stage: build
      script: npm run build && git diff dist/es/

    - stage: code format
      script: travis_retry npm run test:typings
      env: LABEL=test:typings:ci
    - stage: code format
      script: travis_retry npm run check-types
      env: LABEL=check-types
    - stage: code format
      script: npm run test:deps
      env: LABEL=test:deps
    - stage: code format
      script: npm run test:circular
      env: LABEL=test:circular
    - stage: code format
      script: npm run lint
      env: LABEL=lint

    - stage: unit tests
      script: travis_retry npm run test:node
      env: LABEL=test:node
    - stage: unit tests
      script: travis_retry npm run test:fast
      env: LABEL=test:fast
    - stage: unit tests
      script: travis_retry npm run test:browser
      env: LABEL=test:browser
    - stage: unit tests
      script: travis_retry npm run test:couchdb
      env: LABEL=test:couchdb
    - stage: unit tests
      script: travis_retry npm run test:performance
      env: LABEL=test:performance

    - stage: other
      script: npm run build:size
      env: LABEL=build:size
    - stage: other
      script: npm run build:rollup
      env: LABEL=build:rollup
    - stage: other
      script: npm run build && (cd ./test/tutorials/ && npm install && travis_retry npm test)
      env: LABEL=docs

    - stage: examples
      script: npm run build && (cd ./examples/angular && npm install > "/dev/null" 2>&1 && npm run lint && npm run build && travis_retry npm run test:build)
      env: LABEL=angular
    - stage: examples
      script: npm run build && (cd ./examples/vue && npm install > "/dev/null" 2>&1 && npm run lint && npm run build && travis_retry npm run test)
      env: LABEL=vue
    - stage: examples
      script: npm run build && (cd ./examples/electron && npm install > "/dev/null" 2>&1 && travis_retry npm run test)
      env: LABEL=electron
    - stage: examples
      script: npm run build && (cd ./examples/electron-remote && npm install > "/dev/null" 2>&1 && travis_retry npm run test)
      env: LABEL=electron-remote
    - stage: examples
      script: npm run build && (cd ./examples/react-native && npx yarn@1.13.0 install > "/dev/null" 2>&1 && travis_retry npm run test && echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p && npm run test:bundle)
      env: LABEL=react-native
    - stage: examples
      script: npm run build && (cd ./examples/node && npm install > "/dev/null" 2>&1 && travis_retry npm run test)
      env: LABEL=node
    - stage: examples
      script: npm run build && (cd ./examples/graphql && npm install > "/dev/null" 2>&1 && npm run build && travis_retry npm run test:ci)
      env: LABEL=graphql
